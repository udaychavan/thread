------------------------------------------------------------------------------------------
Task 1 - Part a)
------------------------------------------------------------------------------------------

Principle parts of the the problem 
1. Scanning products and adding it to list
2. Storing product specifications like weight, quantity
3. Transaction total an product count 
5. Payment mode selection and payment process
6. Bagging area restrictions


------------------------------------------------------------------------------------------
Part b) Basic steps to checkout a product.
------------------------------------------------------------------------------------------

PROGRAM <productCheckout>:
	DECLARE list<product> checkoutProductList;
	DECLARE double totalAmount;
	DECLARE integer productCount;
   	SET checkoutProductList = null;
   	SET totalAmount = 0;
   	SET productCount = 0;
       
   	WHILE (product is scanned) 
   	    FETCH details of scanned product p and show details;
   	    SHOW details of scanned product p;
   	    ADD checkoutProductList.add(p);
   	    UPDATE the totalPrice; 
   	    UPDATE the productCount;
   	    WHILE (product p is not put in bagging area)
   	    		WAIT till product is put in bagging area;
   	    		IF (product p put in bagging area)
   	    			BREAK;
   	    		ELSE
   	    			CONTINUE waiting;
   	    		ENDIF
   	    END WHILE
   	END WHILE
END

------------------------------------------------------------------------------------------
Task2: checkout
------------------------------------------------------------------------------------------
PROGRAM <start>
	DECLARE boolean isStarted;
	SET isStarted = false;
	IF (start button clicked)
	    isStarted = true;

	IF (isStarted)
	      START checkoutProcess;
	ELSE
		DO NOTHING;
	ENDIF
END

------------------------------------------------------------------------------------------
Task 3: payment
------------------------------------------------------------------------------------------
PROGRAM <payment>
	DECLARE string paymentMode;
	DECLARE boolean payNow;
	DECLARE double amount;
	SET paymentMode = "";
	SET amount = 0;
	DISPLAY orderSummary to customer;
	DISPLAY priceDetails to customer;
	DISPLAY totalAmount to be paid;
	INPUT paymentMode;
		IF (paymentMode == "creditCard"){
			SET amount = totalAmount;
			SHOW the amount to be paid;
			INPUT creditCardNumber;
			INPUT expiryDetails;
			INPUT cvvNumber;
			REDIRECT to bank; 
			PAY the amount;            			
		}
		ELSEIF(paymentMode == "cash"){
			SET amount = totalAmount;
			SHOW the amount to be paid;
			PAY the amount;     
		}					                
		ENDIF
	PRINT the bill;
END


------------------------------------------------------------------------------------------
Task 4 : checkout
------------------------------------------------------------------------------------------
PROGRAM<checkout>
	DECLARE list<product> checkoutProductList;
	DELCARE boolean payNow;
	DECLARE boolean isStarted;
	SET checkoutProductList = null;
	SET payNow = false;
	FETCH isStarted;
	IF (isStarted)
		WHILE (true)
			IF(customer scans product)
		       ADD checkoutProductList.add(product);
		       DISPLAY checkoutProductList to customer;
		       
		       //if customer wish to add more products to checkout list
		       IF (continueShopping = true) THEN
		             CONTINUE;
		       //customer press the pay now      
		       ELSE
		       		SET payNow = true;
		            BREAK;
		       ENDIF
		    ELSE
		    	DISPLAY scan next product;
		    ENDIF    
		ENDWHILE
			START payment process;
	ELSE
	     DO NOTHING;
	ENDIF   
END


------------------------------------------------------------------------------------------
Task 5: pay now
------------------------------------------------------------------------------------------
PROGRAM <paynow>
	DECLARE list<product> checkoutProductList;
	DELCARE boolean payNow;
	DECLARE boolean isStarted;
	SET checkoutProductList = null;
	SET payNow = false;
	FETCH isStarted;
	IF (isStarted)
		WHILE (true)
			IF(customer scans product)
		       ADD checkoutProductList.add(product);
		       DISPLAY checkoutProductList to customer;
		       
		       //if customer wish to add more products to checkout list
		       IF (continueShopping = true) THEN
		             CONTINUE;
		       //customer press the pay now      
		       ELSE
		       		SET payNow = true;
		            BREAK;
		       ENDIF
		    ELSE
		    	DISPLAY scan next product;
		    ENDIF    
		ENDWHILE
		   IF(payNow)
				INPUT paymentMode;
				IF (paymentMode == "creditCard"){
					SET amount = totalAmount;
					SHOW the amount to be paid;
					INPUT creditCardNumber;
					INPUT expiryDetails;
					INPUT cvvNumber;
					REDIRECT to bank; 
					PAY the amount;            			
				}
				ELSEIF(paymentMode == "cash"){
					SET amount = totalAmount;
					SHOW the amount to be paid;
					PAY the amount;     
				}					                
				ENDIF
			    PRINT the bill;
			ENDIF
	ELSE
	     DO NOTHING;
	ENDIF   
END

------------------------------------------------------------------------------------------
Task6: Transaction Total and Product Count
------------------------------------------------------------------------------------------
PROGRAM <transctionTotalAndProductCount>
	DECLARE double totalAmount;
	DECLARE integer productCount;
	SET totalAmount = 0;
	SET productCount = 0;
	WHILE (product is scanned)
	    ADD totalAmount = product.price + totalPrice;
	    ADD productCount = productCount + 1;
	    DISPLAY totalPrice;
	    DISPLAY productCount;
	ENDWHILE
END

------------------------------------------------------------------------------------------
Task7: Bagging area restrictions:
------------------------------------------------------------------------------------------
PROGRAM <baggingArea_restrictions>
	DECLARE double currentScaleWeight;
	DECLARE double previousScaleWeight;
	SET currentScaleWeight = 0;
	FOREACH ( scanned product )
		SET currentScaleWeight = previousScaleWeight;
		WHILE ((currentScaleWeight - previousScaleWeight) == 0)
			DISPLAY "Please place product in the bagging area";
			WAIT 1 minute;
			READ currentScaleWeight = currentScaleWeight;
		END WHILE
	END FOREACH
END



	

